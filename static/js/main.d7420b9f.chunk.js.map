{"version":3,"sources":["assets/Logo.gif","components/Logo.js","components/Header.js","components/Cards.js","components/MovieButton.js","components/DeleteButton.js","components/MovTitle.js","components/Banner.js","components/NomTitle.js","components/MoviesList.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["style","logoStyle","display","justifyContent","Logo","src","logo","alt","id","Component","row","backgroundColor","Header","className","cardContainer","posterStyle","maxWidth","maxHeight","Cards","props","Poster","Title","Year","children","button","padding","paddingLeft","paddingRight","borderRadius","color","MovieButton","disabled","onClick","borderColor","DeleteButton","NomTitle","MovStyle","Banner","NomStyle","visible","setVisibility","winner","NomData","JSON","parse","window","localStorage","getItem","MoviesList","state","searchTerm","movieData","nominees","search","axios","get","then","res","setState","data","Search","handleChange","event","target","value","timeOutId","setTimeout","clearTimeout","nominateMovie","length","push","console","log","setItem","stringify","alert","deleteMovie","newNomineeArray","filter","nominee","imdbID","clear","this","onChange","border","width","marginBottom","placeholder","visibility","height","frameBorder","class","allowFullScreen","href","Math","floor","random","margin","textAlign","map","movie","fontSize","marginRight","React","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7420b9f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.9c18b1ff.gif\";","import {React, Component} from 'react';\nimport logo from '../assets/Logo.gif';\n\nconst style = {\n    logoStyle: {\n        display: 'grid',\n        justifyContent: 'center',\n    },\n}\n\nclass Logo extends Component { \n    render() { \n        return (   \n                <img src={logo} alt={\"Shoppie 2021 Logo\"} id='logoStyle' style={style.logoStyle}/>\n        )  \n    }\n}\n\nexport default Logo; ","import React from 'react';\nimport Logo from '../components/Logo';\n\nconst style = {\n    row: {\n        display: 'grid',\n        justifyContent: 'center',\n        backgroundColor: '#010101',\n    }\n}\n\nconst Header = () => {\n    return (\n        <main className = \"row\" style={style.row}>\n                <Logo/>\n        </main>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst style = {\n    cardContainer: {\n        // maxWidth: '60%',\n        // maxHeight: '60%',\n    },\n    posterStyle: {\n        maxWidth: '15%',\n        maxHeight: '15%',\n    }\n}\n\nlet Cards = (props) => {\n    return (\n        <div className=\"movieCardContainer\" style={style.cardContainer}>\n            <div className=\"movieInfo\">\n                <div>\n                    <img src={props.Poster} alt='Movie Poster' style={style.posterStyle}/>\n                    <h3>{props.Title}</h3>\n                    <small>Released Date: {props.Year}</small>\n                </div>\n                        <br></br>\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default Cards;","import React from \"react\";\n\nconst style = {\n    button: {\n        padding: '8px',\n        paddingLeft: '40px',\n        paddingRight: '40px',\n        borderRadius: '10px',\n        color: '#010101',\n        backgroundColor: '#fff',\n    }\n}\n\n\nfunction MovieButton (props) {\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12\"  id=\"vote-button\">\n                <br/>\n                <button style={style.button} \n                    disabled={props.disabled}\n                    onClick={props.onClick}>\n                    {props.children}\n                </button>\n                <br></br>\n                <br></br>\n                <hr></hr>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieButton;","import React from \"react\";\n\nconst style = {\n    button: {\n        padding: '8px',\n        paddingLeft: '40px',\n        paddingRight: '40px',\n        borderColor: '#010101',\n        borderRadius: '10px',\n        color: '#010101',\n        backgroundColor: '#fff',\n    }\n}\n\n\nfunction DeleteButton (props) {\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12\"  id=\"vote-button\">\n                <br/>\n                <button style={style.button} disabled={props.disabled} \n                    onClick={props.onClick}>\n                        {props.children}\n                </button>\n                <br></br>\n                <br></br>\n                <hr></hr>\n            </div>\n        </div>\n    )\n}\n\nexport default DeleteButton;","import {React, Component} from 'react';\nimport style from './MovTitle.css'\n           \nclass NomTitle extends Component { \n    render() { \n        return (   \n            <div className=\"MovText\" style={style.MovStyle}>\n                Select Movies\n                <hr></hr>\n            </div>\n        )  \n    }\n}\n\nexport default NomTitle; ","import React from \"react\";\n\nfunction Banner(props) {\n    return (\n        <div id=\"banner\" style={{\n            padding: \"5px\",\n            }}>\n            <h3 id=\"bannerText\"></h3>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Banner;","import {React, Component} from 'react';\nimport style from './NomTitle.css'\n           \nclass NomTitle extends Component { \n    render() { \n        return (   \n            <div className=\"NomText\" style={style.NomStyle}>\n                Nominations\n                <hr></hr>\n            </div>\n        )  \n    }\n}\n\nexport default NomTitle; ","import React from 'react';\nimport axios from 'axios';\nimport Cards from './Cards'\nimport MovieButton from \"./MovieButton\";\nimport DeleteButton from \"./DeleteButton\";\nimport MovTitle from './MovTitle';\nimport Banner from './Banner';\nimport NomTitle from './NomTitle';\n\n// Dictates if the winning nominee will be visible\nconst [visible, setVisibility] = (\"hidden\");\nconst winner = () => {\n    if (visible === \"hidden\") {\n        setVisibility(\"visible\");\n    }\n};\nwinner();\n\nlet NomData = JSON.parse(window.localStorage.getItem(\"nomineeKey\")) || [];\n\nclass MoviesList extends React.Component {\n    state = {\n        searchTerm: '',\n        movieData: [],\n        nominees: []\n    };\n\n    search = () => {\n        const apikey = 'f99ae317';\n        axios.get(\n            `https://www.omdbapi.com/?apikey=${apikey}&s=${this.state.searchTerm}&plot=full`\n        )\n            .then(res => {\n                this.setState({ movieData: res.data.Search })\n            })\n    };\n    // search is updated per button press every 0.1 seconds\n    handleChange = event => {\n        this.setState({\n            searchTerm: event.target.value\n        });\n        const timeOutId = setTimeout(() => {\n            this.search();\n        }, 100);\n        return () => clearTimeout(timeOutId);\n    };\n    // limits 5 nominations, and alerts when trying a sixth selection\n    nominateMovie = data => {\n        if (this.state.nominees.length < 5) {\n            NomData.push(data);\n            console.log(data);\n            console.log(this.setState)\n            window.localStorage.setItem(\"nomineeKey\", JSON.stringify(NomData))\n            this.setState({\n                nominees: [...this.state.nominees, data]\n            });\n        } else{\n            alert(\"Only 5 nominees allowed!\")\n        }\n    };\n    // removes nomination from right column nomination list\n    deleteMovie = data => {\n        let newNomineeArray = this.state.nominees.filter(nominee => nominee.imdbID !== data.imdbID);\n        this.setState({nominees: newNomineeArray});\n        localStorage.clear();\n        window.localStorage.setItem(\"nomineeKey\", JSON.stringify(NomData))\n    };\n\n    render() {\n        const { movieData, nominees } = this.state\n        return (\n            // styling is behind searchbar\n            <div className=\"row\" style={{\n                    backgroundColor: '#010101',\n                    color: '#fff',\n                }}>\n                {/* styling is inside searchbar */}\n                <div className=\"col\">\n                    <form onChange={this.handleChange}>\n                        <input style={{\n                                padding: '10px',\n                                border: 'solid',\n                                borderRadius: '20px',\n                                width: '50%',\n                                marginBottom: '5%',\n                                backgroundColor: '#fff',\n                            }}\n                            placeholder=\"Search for movies\"\n                            onChange={this.handleChange}/>\n                    {/* {Once 5 nominees are picked this banner will be displayed} */}\n                        {this.state.nominees.length === 5 ? (\n                        <Banner onClick={() => winner()} disabled={visible === \"visible\"}>\n                            <h1 style={{\n                                color: \"white\", \n                                visibility: `${visible}`,\n                                }}>\n                                <iframe src=\"https://giphy.com/embed/LPfGHdZ7jRmja01dr3\" \n                                    width=\"300\" height=\"150\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen>\n                                </iframe>\n                                <p>\n                                    <a href=\"https://giphy.com/gifs/beeinspiredclothing-bee-b33-inspired-LPfGHdZ7jRmja01dr3\"></a>\n                                </p>\n                                    {this.state.nominees[Math.floor(Math.random() * this.state.nominees.length)].Title} \n                                    <br/>\n                                    {this.state.nominees[Math.floor(Math.random() * this.state.nominees.length)].Year}\n                            </h1>\n                        </Banner>\n                            ) : (\n                                null\n                            )}\n                    </form>\n                </div>\n            {/* displays left column movie data + button */}\n            <div className=\"row\" style={{\n                    margin: '.5%',\n                }}>\n                <div className=\"col\" style={{\n                        backgroundColor: '#84FFFE',\n                        color: '#010101',\n                        textAlign: 'center',\n                        maxWidth: '100%',\n                        border: 'ridge',\n                        borderColor: '#B684FF',\n                        borderRadius: '25px',\n                        margin: '2%',\n                    }}>\n                        <MovTitle/>\n                    {movieData ? (movieData.map(movie => (\n                        <Cards\n                            id = {movie.imdbID}\n                            key = {movie.imdbID}\n                            Poster = {movie.Poster}\n                            Title = {movie.Title}\n                            Year = {movie.Year}\n                            >\n                            <MovieButton \n                                disabled={this.state.nominees.filter(nominee => nominee.imdbID === movie.imdbID).length === 1}\n                                onClick={() => this.nominateMovie(movie)}\n                             >\n                                Nominate Movie\n                            </MovieButton>\n                        </Cards>\n                    ))\n                        ) : (\n                    // this displays on left column when there are no search results\n                            <p style={{\n                                color: '#010101',\n                                width: '100$',\n                                fontSize: '30px',\n                            }}>\n                                No Movies Found\n                            </p>\n                        )}\n                </div>\n                    {/* right nominations column */}\n                    <div className=\"col\" style={{\n                            backgroundColor: '#9B69FF',\n                            color: '#fff',\n                            border: 'ridge',\n                            borderColor: '#84FFFE',\n                            borderRadius: '25px',\n                            margin: '2%',\n                            marginRight: '2%',\n                        }}>\n                            <NomTitle/>\n                        {nominees.length > 0 ? (\n                            nominees.map(nominee => (\n                                <Cards\n                                    id=  {nominee.imdbID}\n                                    key = {nominee.imdbID}\n                                    Poster = {nominee.Poster}\n                                    Title = {nominee.Title}\n                                    Year = {nominee.Year}\n                                    >\n                                    <DeleteButton onClick={() => this.deleteMovie(nominee)}>\n                                        Remove\n                                    </DeleteButton>\n                                </Cards>\n                            ))\n                        ) : (\n                        null\n                        )\n                        }\n                    {/* {Once 5 nominees are picked this banner will be displayed} */}\n                        {this.state.nominees.length === 5 ? (\n                        <Banner onClick={() => winner()} disabled={visible === \"visible\"}>\n                            <h1 style={{\n                                color: \"white\", \n                                visibility: `${visible}`,\n                                }}>\n                                <iframe src=\"https://giphy.com/embed/LPfGHdZ7jRmja01dr3\" \n                                    width=\"300\" height=\"150\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen>\n                                </iframe>\n                                <p>\n                                    <a href=\"https://giphy.com/gifs/beeinspiredclothing-bee-b33-inspired-LPfGHdZ7jRmja01dr3\"></a>\n                                </p>\n                                    {this.state.nominees[Math.floor(Math.random() * this.state.nominees.length)].Title} \n                                    <br/>\n                                    {this.state.nominees[Math.floor(Math.random() * this.state.nominees.length)].Year}\n                            </h1>\n                        </Banner>\n                            ) : (\n                                null\n                            )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MoviesList;","import React from 'react';\nimport MoviesList from './MoviesList';\n\n\nconst Layout = () => {\n    return (\n        <MoviesList/>\n    )\n}\n\nexport default Layout;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header'\nimport Layout from './components/Layout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Layout/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}